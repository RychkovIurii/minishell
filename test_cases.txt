cat < /dev/urandom | head -n 1 | cat >>out Bash handles!!!! We don't
cat < /dev/urandom | head -n 1 | cat >> out
cat < /dev/urandom | head -n 1 | cat > out | < out cat >> out2 | ls > out3 | cat < out >> out4
minishell> cat << e | cat > out
> fsfsd
minishell> ^C
irychkov@c1r4p4 ~/Desktop/minishell
 % ./minishell
minishell> cat << e | cat << e | cat << e | cat > out
> > > ^C


/bin/echo ""'$USER'""
/bin/echo '"'$USER'"'
/bin/echo "'"'$USER'"'"

/bin/echo '"'"$USER"'"'

/bin/echo $"HOME"$USER

/bin/echo $"HOM"E$USER

/bin/echo "exit_code ->$? user ->$USER home -> $HOME"

/bin/echo $"HOME"

/bin/echo $"42$"

/bin/echo "$ "

/bin/echo \$USER

/bin/echo \\$USER

/bin/echo \\\$USER

/bin/echo \\\\$USER

/bin/echo \\\\\$USER

/bin/echo \\\\\\\\\$USER

/bin/echo \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$USER \$PATH \\$PWD

bin/echo text"$USER"

/bin/echo text"'$USER'" ' $USER '

/bin/echo ''''''''''$USER''''''''''

/bin/echo ""'""""""$USER""""""'""

bin/echo """"""""'$USER'""""""""

/bin/echo """"""'""$USER""'""""""

/bin/echo $USER'$USER'text oui oui     oui  oui $USER oui      $USER ''

/bin/echo "text" "text$USER" ... "$USER"

/bin/echo $USER$TESTNOTFOUND$HOME$

">>" asd

cat << $USER

cat << "$USER"
why
not
$USER

cat << "$US"E"R"
because
we
love
bash
$USER

cd "$H"O"ME"/Desktop/
echo $?

export T=n
echo "-"$T$T

export T=ech
echo $T"o"

export T=ech
echo $T"o "

export T=ech
echo $T"o -n"

export T=ech
echo $T"o -n"

export T=ech
echo $T'o'

export T="-n test1 -n test 2"
echo $T

export T=ech
echo $T'o '


export T=nnnnnnnn
echo "-""$T"nnnnnnnnnnnnn -nnnnnnnn"$T" '-'"$T"

export T=nnnnnnnn
echo "-""$T"nnnnnnnnnnnnn -nnnnnnnn"$T" '-''$T'

export T=nnnnnnnn
echo "-"'$T'nnnnnnnnnnnnn -nnnnnnnn'$T' '-'"$T "

export T=nnnnnnnn
echo "-"'$T'nnnnnnnnnnnnn -nnnnnnnn$T '-''$T '


export T=e E=c S=h L=o
$T$E$S$L -nn

export T="s"
l$T

export T="s"
l$T -a

xport T=">"
echo segfault $T grep segfault

export T='<'
echo segfault $T grep segfault

export T="<<"
echo segfault $T grep segfault

export T='<<'
echo segfault $T grep segfault

export T="echo segfault | grep segfault"
$T

export T=-nnnnnnnn"nnnnnnn "
echo $T

           ''echo ok

           ""echo ok

           ""echo"" ok

           ""'echo'"" ok

echo '$'$'$'$'$'

echo '$'$'$'$'$'$'$'

echo "$"$'$'$"$"$"$"$'$'

echo $/ $/ 

echo "$/ $/"

echo $/"$/"

echo cd ~

echo ''$?''"42"

echo ""'$USER'""

echo '"'$USER'"'

echo "'"'$USER'"'"

echo '"'"$USER"'"'

echo $"HOME"$USER

echo $"HOM"E$USER

echo "exit_code ->$? user ->$USER home -> $HOME"

echo $"HOME"

echo $"42$"

echo "$ "

echo \$USER

echo \\$USER

echo \\\$USER

echo \\\\$USER

echo \\\\\$USER

echo \\\\\\\\\$USER

echo \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$USER \$PATH \\$PWD

echo text"$USER"

echo text"'$USER'" ' $USER '

echo ''''''''''$USER''''''''''

echo $USER'$USER'text oui oui     oui  oui $USER oui      $USER ''

echo "text" "text$USER" ... "$USER"

echo $USER$TESTNOTFOUND$HOME$

echo -n -n test1

echo -n -n -n -n -n test1

echo -n -n -nasd

echo -n -n -n-nnnnn

echo -n -nnnnnnn -n -nnn -nnnnn -n-n

echo -n -nnnnnnn -n -nnn -nnnnn -n feel my pain

echo -n -n -n-n

cd ../../

pwd
cd ~
cd - ananas dot jpeg
pwd

pwd
cd ~
cd -
pwd

pwd
cd -
pwd

pwd
cd ~
pwd

env | grep HOME

env | grep USER

### EXPORT ###
/bin/echo $HALLO42
env | grep HALLO42
export HALLO42=42
/bin/echo $HALLO42
env | grep HALLO42

/bin/echo $HOME
env | grep HOME
export HOME=42
/bin/echo $HOME
env | grep HOME

export TES_T=123
/bin/echo $TES_T
env | grep TES_T

export HELLO42=T=""
/bin/echo $HELLO42
env | grep HELLO42
env | grep HELLO42=T=

/bin/echo $mini_test
env | grep mini_test
export mini_test=
/bin/echo $mini_test
env | grep mini_test

/bin/env | grep "_="

/bin/env | grep "SHLVL"

env | sort | grep -v SHLVL | grep -v ^_


s | cat << stop | grep "asd"
is this good
stop

ls | cat << stop | ls -la | cat << stop1
12
32232
23
stop
awdaw
daswd
stop1

ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la | cat << stop3
$USER
ad
as $HOME
stop
awd
wf$PWDdqwdwqd
stop1
das
das
stop2
dsq
wd
wf$PWDdqwdwqd
stop3

ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la > out | cat << 'stop3'
$USER
ad
stop
dsa
stop1
sad
stop2
as $HOME
stop3
/bin/rm -f out

ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la > > out | cat << stop3
fe
wf
fwe
f
stop
dw
stop1
dwasd
stop2
cat Makefile | ls > out
cat out
/bin/rm -f out

ls | cat << stop | ls -la > out0| cat << stop1 | ls | cat << stop2 | ls -la >> out | cat << stop3
fe
wf
fwe
f
stop
dw
stop1
dw
stop2
e
wf
stop3
/bin/rm -f out
/bin/rm -f out0



ls|cat Makefile|cat<<asd>out
$USER
asd
/bin/rm -f out

ls|cat Makefile|cat<<'asd'>out
$USER
asd
/bin/rm -f out

ls|cat Makefile|cat<<"asd">out
$USER
asd
/bin/rm -f out


### HERE_DOC ###
cat << lim
 "lim"
HELLO
42
 lim
testing your minishell
limm
lim

<<lim cat
 "lim"
HELLO
42
 lim
testing your minishell
limm
lim

cat << lim
test
lim

cat << EOF
"EOF"
!! HELLO
@42 !!
 EOF\t\b\n
testing your minishell :)
limm
EOF

cat << hello
$USER
$NOVAR
$HOME
hello

cat << 'lim'
$USER
$NOVAR
$HOME
lim

cat << lim''
$USER
$NOVAR
$HOME
lim

cat << "lim"
$USER
$NOVAR
$HOME
lim

cat << 'lim'
$USER
$NOVAR
$HOME
lim

/bin/echo $HOME$NOTHING$USER$

/bin/echo $"HOME"$USER

/bin/echo $"HOM"E$USER

/bin/echo $'HOM'E$USER

/bin/echo $"HOME"

/bin/echo $'HOME'

/bin/echo $

/bin/echo "$"

/bin/echo "$""$"

/bin/echo $"$"

/bin/echo $"42$"

/bin/echo "$"$

/bin/echo $'$'

/bin/echo "$ "

/bin/echo $TESTNOTFOUND$HOME$

/bin/echo ""$?""

### SCMD IN VARIABLE ###
export tmp_test="/bin/echo 42"
$tmp_test
$tmp_test 42
export tmp_test="/bin/echo"
$tmp_test 42 42


### VARIABLE SPLITTING ###
export X="  A  B  "
/bin/echo "1"$X'2'

export X=" A  B  "
/bin/echo "1"$X'2'

export X="A  B  "
/bin/echo "1"$X'2'

export X="  A  B "
/bin/echo "1"$X'2'

export X="  A  B"
/bin/echo "1"$X'2'

export X="  A B  "
/bin/echo "1"$X'2'

export X="  AB  "
/bin/echo "1"$X'2'

export X="  A  B  "
/bin/echo $X'2'

export X="  A  B  "
/bin/echo $X"1"

export X=""
/bin/echo "1"$X'2'

export X=" "
/bin/echo "1"$X'2'

export X="   "
/bin/echo "1"$X'2'

export X="  A  B  "
/bin/echo ?$X'2'

export X="  A  B  "
/bin/echo "1"$X?

export X="  A  B  "
/bin/echo "1"$X2?


echo -n -n -n 42

echo -n -n -n -n 42

exit

exit 42

exit ""

exit 1 2 3

exit 42 42

exit A

exit A 1

exit 1 A

echo 1 '>' echo 2

echo 1 '>>' file 2

'<<' lim echo 1 >>/dev/null

echo "   $   "

echo $"HOME"

echo $'HOME'

echo ''$PWD''

echo $USE"R"$HOME

echo $"HOME"$USER

echo $"HOM"E$USER

echo $'HOM'E$USER

echo $"HOME"

echo $'HOME'

echo $

echo "$"

echo "$""$"

echo $"$"

echo $"42$"

echo "$"$

echo $'$'

env | grep HOME

env | grep $USER

export USER=
env | grep USER

export USER="@?/"
env | grep USER

export NEW="4 2"
env | grep NEW

export NEW="4=2"
env | grep NEW

export NEW=4=2
env | grep 4=2


export NEW=42
env | grep NEW
unset NEW
env | grep NEW
unset NEW
unset NEW
unset NEW
unset NEW
unset NEW
env | grep NEW



unset PATH
cd /bin
ls

unset PATH
cd /bin/../bin/
ls



unset PATH
echo $PATH
/bin/ls
echo 1
cd -
echo 42

export PATH=""
echo $PATH

cd -

cd ~/Desktop/
pwd

export PATH=
echo $PATH
echo 1


touch tmp_x_file1
tmp_x_file1
echo $?
./tmp_x_file1
echo $?
export PATH=$HOME
echo $PATH
tmp_x_file1
echo $?
./tmp_x_file1
echo $?
unset PATH
tmp_x_file1
echo $?
./tmp_x_file1
echo $?
echo 42
/bin/rm -f tmp_x_file1


echo "<<| echo wtf"


/bin/echo '\1$42' > tmp_redir_out
ls -la | grep tmp_redir_out | awk '{print $1 $2}'
cat -e tmp_redir_out
rm tmp_redir_out


export test="arg1	arg2"
echo 'echo $1' > tmp_test_sh
bash tmp_test_sh $test
echo 'echo $2' > tmp_test_sh
bash tmp_test_sh $test
rm -f tmp_test_sh

echo "env | /usr/bin/wc -l" | env -i $MINISHELL_PATH"/"$EXECUTABLE
echo $?

echo "ls" | env -i $MINISHELL_PATH"/"$EXECUTABLE
echo $?

echo "unset PATH" | env -i $MINISHELL_PATH"/"$EXECUTABLE
echo $?
